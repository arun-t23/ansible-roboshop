- name: setup catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: nodejs module disable
    ansible.builtin.command: dnf module disable nodejs -y

  - name: nodejs module 20 enable
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: nodejs installation
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create the system user
    ansible.builtin.user:
      name: roboshop
      comment: roboshop system user
      system: true
      shell: /sbin/nologin
      home: /app
  
  - name: directory creation
    ansible.builtin.file:
      state: directory
      path: /app

  - name: download catalogue code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

  - name: unzip the code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    community.general.npm:
    path: /app

  - name: copy the service file
    ansible.builtin.copy:
      src: catalogue.servive
      dest: /etc/systemd/system/catalogue.service

  - name: mongo repo create
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: mongo client installation
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present

  - name: connect to mongodb catalogue
    ansible.builtin.command: mongosh mongodb.daws86s.fun --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
    register: catalogue_output

  - name: print the catalogue output
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

 ## - name: deamon reload
 ##   ansible.builtin.command: systemctl daemon-reload